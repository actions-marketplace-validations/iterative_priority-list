name: Priority List
on:
  schedule: [{ cron: '0 2 * * 1' }]  # 02:00 (AM, UTC) Mondays
  workflow_dispatch:
    inputs:
      repos:
        required: true
        type: string
        default: >-
          iterative/cml
          iterative/cml.dev
          iterative/terraform-provider-iterative
          iterative/setup-cml
          iterative/setup-dvc
          iterative/status.cml.dev
          iterative/tpi
          iterative/example_cml
          iterative/cml_base_case
          iterative/cml_cloud_case
          iterative/cml_dvc_case
          iterative/cml_tensorboard_case
          iterative/cml-runner-base-case
          iterative/blog-tpi-jupyter
          iterative/blog-tpi-bees
        # iterative/cml-playground # not public
      weight_activity:
        required: true
        type: number
        default: 14
        description: weight for number of comments
      weight_reactions:
        required: true
        type: number
        default: 7
        description: weight for reactions to original issue
      weight_staleness:
        required: true
        type: number
        default: 1
        description: weight for days of inactivity
      weight_age:
        required: true
        type: number
        default: 0.142857  # 1/7
        description: weight for days open
      multiplier_pr:
        required: true
        type: number
        default: 7
        description: weight multiplier for PRs (compared to issues)
      multiplier_labels:
        required: true
        type: string
        default: >-
          example:-1
          epic:0.142857
          blocked:0.142857
          invalid:0.142857
        description: weight multiplier for labels (negative to exclude)
      p_label_graveyard:
        required: true
        type: number
        default: 4
        description: largest pN-label (lowest priority)
jobs:
  list:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with: { python-version: '3.x' }
    - run: pip install requests yq
    - name: Fetch issues & PRs
      run: |
        REPOS=(${{ inputs.repos }})
        if test ${#REPOS[@]} -le 0; then
          REPOS=( $(yq -r '.on.workflow_dispatch.inputs.repos.default' .github/workflows/priority-list.yml) )
        fi
        ./.github/workflows/fetch.sh "${REPOS[@]}"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Prioritise
      run: |
        ./.github/workflows/prioritise.py >> $GITHUB_STEP_SUMMARY
      env:
        WEIGHT_ACTIVITY: ${{ inputs.weight_activity }}
        WEIGHT_REACTIONS: ${{ inputs.weight_reactions }}
        WEIGHT_STALENESS: ${{ inputs.weight_staleness }}
        WEIGHT_AGE: ${{ inputs.weight_age }}
        MULTIPLIER_PR: ${{ inputs.multiplier_pr }}
        MULTIPLIER_LABELS: ${{ inputs.multiplier_labels }}
        P_LABEL_GRAVEYARD: ${{ inputs.p_label_graveyard }}
        SLACK_WEBHOOK: ${{ github.event_name == 'schedule' && secrets.SLACK_WEBHOOK || '' }}
